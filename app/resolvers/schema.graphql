scalar ISO8601 # Date time string
scalar CURSOR  # Opaque pagination cursor

type Workout {
    id: ID!
    barcode: Int!
    title: String!
    location: String!
    available: Int!
    duration: Int!
    time: ISO8601!          # When the workout session starts
    timestamp: ISO8601!     # When the workout session data was recorded
    group: WorkoutGroup!
}

# Workouts with the same barcode
type WorkoutGroup {
    workouts: [Workout!]!
    first: Workout!
    last: Workout!
}

type Query {
    workouts(first: Int, after: CURSOR, last: Int, before: CURSOR): WorkoutConnection
    workout(id: ID!): Workout
    workoutGroup(barcode: Int!): WorkoutGroup
}

type PageInfo {
    hasPreviousPage: Boolean!
    hasNextPage: Boolean!
    startCursor: CURSOR!
    endCursor: CURSOR!
}

type WorkoutConnection {
    pageInfo: PageInfo!
    edges: [WorkoutEdge!]!
}

type WorkoutEdge {
    cursor: CURSOR!
    node: Workout!
}